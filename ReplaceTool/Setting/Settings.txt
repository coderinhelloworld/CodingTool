[{"Name":"ExportExcelByDataTable","Input":"string fileNameNoExtension = string.Concat(\"{{title}}\", DateTime.Now.ToString(\"yyyyMMddHHmmss\"));\nvar fileName = fileNameNoExtension + \".xlsx\";\nvar filePrePath = FileTaskInfo.FilePrePath + this.LoginUser.UserId + \"/\" + DateTime.Now.ToString(\"yyyyMMdd\") + \"/\" + ExportType.ExcelExport + \"/\";\n          //如果没有配置MQ参数,按照原来的方式导出\nif (CommTaskInfoBo.CheckIsOpenMqHandleFileTask())\n{\n    var taskId = Guid.NewGuid().ToString(\"N\");\n    var taskParams = new List<MethodParams>();\n    taskParams.Add(new MethodParams() { ParamName = \"entId\", ParamValue = vEntId });\n    var methodInfoList = new List<CommExportTaskInfo>();\n    var taskInfo = new CommExportTaskInfo\n    {\n        ExportType = ExportType.ExcelExport,\n        Pdi = pdi,\n        Params = taskParams,\n        MethodType = @\"{{MethodNameSpace}}.{{MethodType}}\",\n        Method = \"{{Method}}\",\n        FileName = fileName,\n        UserId = this.LoginUser.UserId,\n        TraceId = LtcApiTokenHelper.GetApiToken(),\n        EntId = this.LoginUser.CompanyId,\n        TaskId = taskId,\n        FilePrePath = filePrePath,Title = fileName,\n        HandlerName =nameof(ExportExcelByDataTableHandler),\n        MergeId =\"{{MergeId}}\",\n        ExportExcelFileds =vFiled \n    };\n    methodInfoList.Add(taskInfo);\n    this.CommTaskInfoBo.SaveInfoAndSendMq(methodInfoList);\n    model.SetData(\"FileTaskManageId\"+taskId);\n}\nelse\n{\n    //这个方法的参数更改,上面的参数也更改\nPageDataOut pdo = this.DinnerOrderBo.GetDinnerTimeDishesTotal(pdi);\n\n    ExcelImpExpHelper.ExportExcelByDataTable(pdo.Data, \"{{title}}\", fileName, vFiled, \"{{MergeId}}\");\n    model.SetData(\"/TempFiles/UpLoadFiles/Tmp/\" + fileName);\n    return model;\n}\n","SettingItems":[{"NeedReplaceStr":"{{title}}","ReplaceStr":"点餐餐次食材汇总","ReplaceType":null,"Group":null},{"NeedReplaceStr":"{{Method}}","ReplaceStr":"GetDinnerTimeDishesProductTotalExcel","ReplaceType":null,"Group":null},{"NeedReplaceStr":"{{MethodType}}","ReplaceStr":"EIMSDinnerProductScalerBo","ReplaceType":null,"Group":null},{"NeedReplaceStr":"{{MethodNameSpace}}","ReplaceStr":"Bussiness.EIMS","ReplaceType":null,"Group":null},{"NeedReplaceStr":"{{MergeId}}","ReplaceStr":"MerTimeTotalId","ReplaceType":null,"Group":null}]},{"Name":"新建Html页面","Input":"<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n    <title>一卡通云平台</title>\n    <script type=\"text/javascript\" src=\"../../../Scripts/loader.js?v=000004\" id=\"loaderJs\"></script>\n    <script type=\"text/javascript\" language=\"javascript\">\n        $(document).ready(function () {\n            // 初始化\n            $(\"#tblData\").datagrid({\n                width: 'auto',\n                height: 'auto',\n                pagination: true,\n                rownumbers: true,\n                loadMsg: \"正在加载数据,请稍候...\",\n                pageSize: 50,\n                pageList: [10, 50, 100, 200],\n                fitColumns: true,\n                fit: true,\n                dataType: \"json\",\n                singleSelect: true,\n                nowrap: false,\n                striped: true,\n                toolbar: [\n                    { text: '查询', id: \"Search\", iconCls: 'icon-search', handler: function () { searchRecords(1, getDataGridPageSize(\"tblData\"), true); } }\n                ],\n                frozenColumns: [[\n                    { field: 'ck', checkbox: true },\n                ]],\n                columns: [[\n                    { field: 'TableNo', title: '餐桌编号', width: 90, align: 'left' }\n                ]]\n               // onDblClickRow: uploadData\n            });\n            regPermission(\"tblData\", 1);\n            $(\".lazyLoad\").css(\"visibility\", \"visible\");\n        });\n        \n        // 查询\n        function searchRecords(pageNo, pageSize, initPage) {\n            showProgressEx(function () {\n                processRequest(\"/Handlers/Cons/DinnerTableHandler.ashx\", \"Index\", getUrlCondition(pageNo, pageSize, $(\"#tblData\")), function (retCode, retVal) {\n                    if (retCodeSuccess == retCode) {\n                        $(\"#tblData\").datagrid(\"loadData\", stringToJSON(retVal));\n\n                        if (pageNo == 1 && initPage) {\n                            var p = $(\"#tblData\").datagrid('getPager');\n                            $(p).pagination({\n                                pageNumber: 1,\n                                beforePageText: '第', //页数文本框前显示的汉字              \n                                afterPageText: '页,共{pages}页',\n                                displayMsg: '共{total}条记录',\n                                showRefresh: false,\n                                onSelectPage: function (pageNo, pageSize) {\n                                    searchRecords(pageNo, pageSize);\n                                }\n                            });\n                        }\n                    } else {\n                        alertEx(retVal);\n                    }\n                });\n            });\n        }\n    </script>\n</head>\n<body class=\"easyui-layout lazyLoad\" style=\"width: 100%; height: 100%;\" fit=\"true\"\n      border=\"false\">\n<div region=\"west\" split=\"true\" title=\"查询条件\" style=\"width: 250px;\" border=\"true\">\n    <table class=\"tblCondition\" style=\"width: 100%\" border=\"0\" cellpadding=\"1\" cellspacing=\"1\">\n        <thead>\n        <tr>\n            <th>\n                餐桌编号：\n            </th>\n            <td>\n                <input id=\"Filter-String-Equal-t-TABLE_NO\" style=\"width: 99%;\" class=\"easyui-textbox\"\n                       prompt=\"查询条件\" />\n            </td>\n        </tr>\n        <tr>\n            <th>\n                餐桌名称：\n            </th>\n            <td>\n                <input id=\"Filter-String-Equal-t-TABLE_TITLE\" style=\"width: 99%;\" class=\"easyui-textbox\"\n                       prompt=\"查询条件\" />\n            </td>\n        </tr>\n        </thead>\n    </table>\n</div>\n<div region=\"center\" title=\"餐桌列表\" border=\"true\">\n    <table id=\"tblData\" border=\"false\">\n    </table>\n</div>\n</body>\n</html>\n\n","SettingItems":[{"NeedReplaceStr":"","ReplaceStr":"","ReplaceType":"替换","Group":null},{"NeedReplaceStr":"","ReplaceStr":"","ReplaceType":"替换","Group":null}]},{"Name":"导出Excel后台方法","Input":"<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n    <title>一卡通云平台</title>\n    <script type=\"text/javascript\" src=\"../../../Scripts/loader.js?v=000004\" id=\"loaderJs\"></script>\n    <script type=\"text/javascript\" language=\"javascript\">\n        $(document).ready(function () {\n            // 初始化\n            $(\"#tblData\").datagrid({\n                width: 'auto',\n                height: 'auto',\n                pagination: true,\n                rownumbers: true,\n                loadMsg: \"正在加载数据,请稍候...\",\n                pageSize: 50,\n                pageList: [10, 50, 100, 200],\n                fitColumns: true,\n                fit: true,\n                dataType: \"json\",\n                singleSelect: true,\n                nowrap: false,\n                striped: true,\n                toolbar: [\n                    { text: '查询', id: \"Search\", iconCls: 'icon-search', handler: function () { searchRecords(1, getDataGridPageSize(\"tblData\"), true); } }\n                ],\n                frozenColumns: [[\n                    { field: 'ck', checkbox: true },\n                ]],\n                columns: [[\n                    { field: 'TableNo', title: '餐桌编号', width: 90, align: 'left' }\n                ]]\n               // onDblClickRow: uploadData\n            });\n            regPermission(\"tblData\", 1);\n            $(\".lazyLoad\").css(\"visibility\", \"visible\");\n        });\n        \n        // 查询\n        function searchRecords(pageNo, pageSize, initPage) {\n            showProgressEx(function () {\n                processRequest(\"/Handlers/Cons/DinnerTableHandler.ashx\", \"Index\", getUrlCondition(pageNo, pageSize, $(\"#tblData\")), function (retCode, retVal) {\n                    if (retCodeSuccess == retCode) {\n                        $(\"#tblData\").datagrid(\"loadData\", stringToJSON(retVal));\n\n                        if (pageNo == 1 && initPage) {\n                            var p = $(\"#tblData\").datagrid('getPager');\n                            $(p).pagination({\n                                pageNumber: 1,\n                                beforePageText: '第', //页数文本框前显示的汉字              \n                                afterPageText: '页,共{pages}页',\n                                displayMsg: '共{total}条记录',\n                                showRefresh: false,\n                                onSelectPage: function (pageNo, pageSize) {\n                                    searchRecords(pageNo, pageSize);\n                                }\n                            });\n                        }\n                    } else {\n                        alertEx(retVal);\n                    }\n                });\n            });\n        }\n    </script>\n</head>\n<body class=\"easyui-layout lazyLoad\" style=\"width: 100%; height: 100%;\" fit=\"true\"\n      border=\"false\">\n<div region=\"west\" split=\"true\" title=\"查询条件\" style=\"width: 250px;\" border=\"true\">\n    <table class=\"tblCondition\" style=\"width: 100%\" border=\"0\" cellpadding=\"1\" cellspacing=\"1\">\n        <thead>\n        <tr>\n            <th>\n                餐桌编号：\n            </th>\n            <td>\n                <input id=\"Filter-String-Equal-t-TABLE_NO\" style=\"width: 99%;\" class=\"easyui-textbox\"\n                       prompt=\"查询条件\" />\n            </td>\n        </tr>\n        <tr>\n            <th>\n                餐桌名称：\n            </th>\n            <td>\n                <input id=\"Filter-String-Equal-t-TABLE_TITLE\" style=\"width: 99%;\" class=\"easyui-textbox\"\n                       prompt=\"查询条件\" />\n            </td>\n        </tr>\n        </thead>\n    </table>\n</div>\n<div region=\"center\" title=\"餐桌列表\" border=\"true\">\n    <table id=\"tblData\" border=\"false\">\n    </table>\n</div>\n</body>\n</html>\n\n","SettingItems":[]},{"Name":"SQL参数替换","Input":"","SettingItems":[{"NeedReplaceStr":"this.","ReplaceStr":"this.Pre","ReplaceType":"","Group":null},{"NeedReplaceStr":"StringBuilder cmdTxt = new StringBuilder();","ReplaceStr":"var cmdTxt = base.DbParameterBuilder.CreateParametricSqlBuilder();","ReplaceType":"","Group":null},{"NeedReplaceStr":"StringBuilder cmdText = new StringBuilder();","ReplaceStr":"var cmdText = base.DbParameterBuilder.CreateParametricSqlBuilder();","ReplaceType":"","Group":null},{"NeedReplaceStr":"string.Format(","ReplaceStr":"","ReplaceType":"","Group":null},{"NeedReplaceStr":"cmdText.ToString()","ReplaceStr":"cmdText","ReplaceType":"","Group":null},{"NeedReplaceStr":"base.","ReplaceStr":"base.Pre","ReplaceType":"","Group":null},{"NeedReplaceStr":"} 23:59:59'","ReplaceStr":"} +' 23:59:59'","ReplaceType":"","Group":null},{"NeedReplaceStr":"} 00:00:00'","ReplaceStr":"}+' 00:00:00'","ReplaceType":"","Group":null},{"NeedReplaceStr":"}'","ReplaceStr":"}","ReplaceType":"替换","Group":null},{"NeedReplaceStr":"'{","ReplaceStr":"{","ReplaceType":"替换","Group":null},{"NeedReplaceStr":".GetFormat(","ReplaceStr":",","ReplaceType":"","Group":null},{"NeedReplaceStr":"));","ReplaceStr":");","ReplaceType":"","Group":null},{"NeedReplaceStr":")) > 0","ReplaceStr":")> 0","ReplaceType":"","Group":null},{"NeedReplaceStr":" cmdTxt.ToString()","ReplaceStr":"cmdTxt","ReplaceType":"","Group":null}]},{"Name":"导入Excel后台方法","Input":"导入Excel后台方法","SettingItems":[{"NeedReplaceStr":"1","ReplaceStr":"2","ReplaceType":"替换","Group":null},{"NeedReplaceStr":"1","ReplaceStr":"2","ReplaceType":"替换","Group":null},{"NeedReplaceStr":"1","ReplaceStr":"31","ReplaceType":"替换","Group":null},{"NeedReplaceStr":"1","ReplaceStr":"3","ReplaceType":"替换","Group":null}]},{"Name":"队列任务替换","Input":"                    if (CommTaskInfoBo.CheckIsOpenMqHandleFileTask())\n                    {\n                        var uploadRet = TFSServiceHelper.UpLoadFile(serverFileName, File.ReadAllBytes(serverFileName));\n                        if (uploadRet.IsSuccess())\n                        {\n                            var filePrePath=@\"\\TempFiles\\UpLoadFiles\\Tmp\\\";\n                            var taskId = Guid.NewGuid().ToString(\"N\");\n                            var taskParams = new List<MethodParams>();\n                            taskParams.Add(new MethodParams  {  ParamName = \"importRetInfo\",   ParamValue = null  });     \n                            taskParams.Add(new MethodParams{ ParamName = \"serverFileName\",   ParamValue = null }); \n                            taskParams.Add(new MethodParams{ ParamName = \"entId\",   ParamValue = LoginUser.CompanyId });\n                            taskParams.Add(new MethodParams{ ParamName = \"operId\",   ParamValue = LoginUser.UserId });\n                            taskParams.Add(new MethodParams{ ParamName = \"companyPara\",   ParamValue = LoginUser.CompanyPara });\n                            var methodInfoList = new List<CommExportTaskInfo>();\n                            var taskInfo = new CommExportTaskInfo\n                            {\n                                ExportType = ExportType.ExcelImport,\n                                Pdi = null,\n                                Params = taskParams,\n                                MethodType = @\"Bussiness.Edu.EduLessonExamScoreBo\",\n                                Method = \"ImportData\",\n                                FileName = fileName,\n                                UserId = this.LoginUser.UserId,\n                                TraceId = LtcApiTokenHelper.GetApiToken(),\n                                EntId = this.LoginUser.CompanyId,\n                                TaskId = taskId,\n                                FilePrePath = filePrePath,Title=fileName,\n                                HandlerName =nameof(ImportExcelHandler)\n                            };\n                            methodInfoList.Add(taskInfo);\n                            CommTaskInfoBo.SaveInfoAndSendMq(methodInfoList);\n                            model.SetData(\"FileTaskManageId\"+taskId);\n                        }\n                    }\n                    else\n                    {                  \n                        //获取excel表信息\n                        var loginUser = base.LoginUser;\n                        string importBatNo = BatOperProgressHelper.CreateBatOper(loginUser.LoginToken, delegate (ImportRetInfo retInfo)\n                        {\n                            this.EduLessonExamScoreBo.ImportData(retInfo, serverFileName, loginUser.CompanyId, loginUser.UserId, loginUser.CompanyPara);\n                        });\n\n                        model.SetData(importBatNo);\n                        return model;\n                    }","SettingItems":[{"NeedReplaceStr":"}([\\w\\W])[ ].*else([\\w\\W])[ ].*","ReplaceStr":"","ReplaceType":"正则表达式替换","Group":"1"},{"NeedReplaceStr":"if \\(CommTaskInfoBo.CheckIsOpenMqHandleFileTask\\(\\)\\)([\\w\\W]).*[ ].*{","ReplaceStr":"","ReplaceType":"正则表达式替换","Group":"2"},{"NeedReplaceStr":"UserId = this.LoginUser.UserId,","ReplaceStr":"","ReplaceType":"替换","Group":"3"},{"NeedReplaceStr":"TraceId = LtcApiTokenHelper.GetApiToken(),","ReplaceStr":"","ReplaceType":"替换","Group":"4"},{"NeedReplaceStr":"EntId = this.LoginUser.CompanyId,","ReplaceStr":"","ReplaceType":"替换","Group":"5"},{"NeedReplaceStr":"TaskId = taskId,","ReplaceStr":"","ReplaceType":"替换","Group":""},{"NeedReplaceStr":"FilePrePath = filePrePath,","ReplaceStr":"","ReplaceType":"替换","Group":""},{"NeedReplaceStr":"CommTaskInfoBo.SaveInfoAndSendMq(methodInfoList);","ReplaceStr":"","ReplaceType":"替换","Group":""},{"NeedReplaceStr":"var methodInfoList = new List<CommExportTaskInfo>();","ReplaceStr":"","ReplaceType":"替换","Group":""},{"NeedReplaceStr":"methodInfoList.Add(taskInfo);","ReplaceStr":"","ReplaceType":"替换","Group":""},{"NeedReplaceStr":"model.SetData(\"FileTaskManageId\"+taskId);","ReplaceStr":"","ReplaceType":"替换","Group":""},{"NeedReplaceStr":"MethodType = @\"","ReplaceStr":"MethodType = \"","ReplaceType":"替换","Group":""}]}]